import { createApp } from 'vue'
import App from './App.vue'

createApp(App).mount('#app')

// Вопросы и предложения

// Насколько вижу, нужно сделать системные компоненты(формы, инпуты, селекты, модалки и т.п.). И нужно сделать кастомные(динамические компоненты), 
// потому что должна быть зона отвественности кода. Условно если юзер пишет код, и что-то сломалось. Как юзеру и нам понять на чьей стороне ошибка?
// Если таких юзеров 1000, то уже сложно будет оказывать поддержку.

// В этом примере мы будем делать только динамическую компоненту

// По реализации тоже есть вопросы. Нужно ли ограничивать пользователя одним фреймворком? И насколько удобно писать в одном фрейме? 
// Допустим если это компонента которая работаетс 3д графикой, или у него большая логика реализации, не легче ли загрузить как скомпилированный js-файл?

// Я понимаю идею разделения контента и структуры. Но тоже вопрос, как лучше поступить с кастомный компонентой.

// Явная проблема с редактированием напрямую vue js кода, это вопрос его компиляции.
// Сделана основа для этого, но для правильной компиляии картинок, вложенных компонентов нужно придумывать большую лоигку.

// Поэтому как мне кажется лучшим способом является работа с js-кодом. А его получить уже можно разным способом, и для безопасности
// думаю стоит использовать веб компоненты, возможно Shadow DOM. 
// Также стоит продумать input, output для работы с основным контекстом